/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package snarkbait;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.InputVerifier;
import javax.swing.JFileChooser;
import javax.swing.JTextArea;

/**
 *
 * @author tim
 */
public class FileEncryptGUI extends javax.swing.JFrame {

    /**
     * Creates new form FileEncryptGUI
     */
    private BitFlag flag;
    //private final Encryptor encFile;
    private final Settings settings;
    private final Controller controller;
    private final InputVerifier verifier = new HexInputVerifier();
    private File file;
    private Bank fileBank;
    private Bank compressBank;
    private Bank encryptBank;
    
    private boolean init;
    
    public FileEncryptGUI() {
        initComponents();
        controller = new Controller();
        File settingsFile = new File("settings.dat");
        if (!settingsFile.isFile())
        {
            settings = new Settings();
            flag = new BitFlag();
        }
        else
        {
            settings = ZipFunctions.loadSettings();
            flag = new BitFlag(settings.getFlags());
            initSettingsPane();
        }
       
    }
    
   /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        fileChooser = new javax.swing.JFileChooser();
        settingsFrame = new javax.swing.JFrame();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtKey2 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtPhrase = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btnKeyEnter = new javax.swing.JRadioButton();
        btnKeyRandom = new javax.swing.JRadioButton();
        btnKeyPhrase = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        btnNameRand = new javax.swing.JRadioButton();
        btnNameOrig = new javax.swing.JRadioButton();
        btnNameEnter = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btn32bit = new javax.swing.JRadioButton();
        btn64bit = new javax.swing.JRadioButton();
        btn128bit = new javax.swing.JRadioButton();
        txtOutputFileName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        chkDeleteOrig = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        txtKey4 = new javax.swing.JTextField();
        txtKey1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtKey3 = new javax.swing.JTextField();
        chkDeleteCrypt = new javax.swing.JCheckBox();
        chkNoCompress = new javax.swing.JCheckBox();
        btnGenerate = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        keybitgroup = new javax.swing.ButtonGroup();
        keyTypeGroup = new javax.swing.ButtonGroup();
        saveFileGroup = new javax.swing.ButtonGroup();
        enterKeyFrame = new javax.swing.JFrame();
        jLabel10 = new javax.swing.JLabel();
        keyFrameTxtKey1 = new javax.swing.JTextField();
        keyFrameTxtKey2 = new javax.swing.JTextField();
        keyFrameTxtKey3 = new javax.swing.JTextField();
        keyFrameTxtKey4 = new javax.swing.JTextField();
        keyFrameBtnOk = new javax.swing.JButton();
        keyFrameBtnCancel = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnEncrypt = new javax.swing.JButton();
        btnDecrypt = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        textarea = new javax.swing.JEditorPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        textarea2 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea3 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        textarea4 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        labelFile = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        open = new javax.swing.JMenu();
        Open = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        menuSet = new javax.swing.JMenuItem();
        about = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        settingsFrame.setTitle("XcryptOR");
        settingsFrame.setMinimumSize(new java.awt.Dimension(519, 446));
        settingsFrame.setResizable(false);
        settingsFrame.setType(java.awt.Window.Type.POPUP);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Settings");

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        txtKey2.setEditable(false);
        txtKey2.setInputVerifier(verifier);
        txtKey2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKey2FocusLost(evt);
            }
        });

        txtPhrase.setColumns(20);
        txtPhrase.setRows(5);
        txtPhrase.setEnabled(false);
        jScrollPane6.setViewportView(txtPhrase);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        keyTypeGroup.add(btnKeyEnter);
        btnKeyEnter.setText("Enter Key");
        btnKeyEnter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnKeyEnterItemStateChanged(evt);
            }
        });

        keyTypeGroup.add(btnKeyRandom);
        btnKeyRandom.setText("Random Key");
        btnKeyRandom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnKeyRandomItemStateChanged(evt);
            }
        });

        keyTypeGroup.add(btnKeyPhrase);
        btnKeyPhrase.setText("Key Phrase");
        btnKeyPhrase.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnKeyPhraseItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnKeyPhrase)
                    .addComponent(btnKeyRandom)
                    .addComponent(btnKeyEnter))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnKeyPhrase)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnKeyRandom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnKeyEnter)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        saveFileGroup.add(btnNameRand);
        btnNameRand.setText("Random Name.dat");
        btnNameRand.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnNameRandItemStateChanged(evt);
            }
        });

        saveFileGroup.add(btnNameOrig);
        btnNameOrig.setText("Original Name.crp");
        btnNameOrig.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnNameOrigItemStateChanged(evt);
            }
        });

        saveFileGroup.add(btnNameEnter);
        btnNameEnter.setText("Enter Name");
        btnNameEnter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnNameEnterItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNameRand)
                    .addComponent(btnNameOrig)
                    .addComponent(btnNameEnter))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNameRand)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNameOrig)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNameEnter))
        );

        jLabel7.setText("Save File Type");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        keybitgroup.add(btn32bit);
        btn32bit.setText("32 Bits");
        btn32bit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btn32bitItemStateChanged(evt);
            }
        });
        btn32bit.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                btn32bitStateChanged(evt);
            }
        });

        keybitgroup.add(btn64bit);
        btn64bit.setText("64 Bits");
        btn64bit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btn64bitItemStateChanged(evt);
            }
        });

        keybitgroup.add(btn128bit);
        btn128bit.setText("128 Bits");
        btn128bit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btn128bitItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn64bit)
                    .addComponent(btn32bit)
                    .addComponent(btn128bit))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn32bit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn64bit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn128bit)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        txtOutputFileName.setEditable(false);

        jLabel5.setText("Key Type");

        jLabel9.setText("Key Phrase:");

        chkDeleteOrig.setText("Delete original file");
        chkDeleteOrig.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDeleteOrigItemStateChanged(evt);
            }
        });

        jLabel4.setText("Key Bit Level");

        txtKey4.setEditable(false);
        txtKey4.setText(" ");
        txtKey4.setInputVerifier(verifier);
        txtKey4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKey4FocusLost(evt);
            }
        });

        txtKey1.setEditable(false);
        txtKey1.setInputVerifier(verifier);
        txtKey1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKey1FocusLost(evt);
            }
        });

        jLabel6.setText("Output File Name:");

        jLabel8.setText("Key:");

        txtKey3.setEditable(false);
        txtKey3.setInputVerifier(verifier);

        chkDeleteCrypt.setText("Delete encrypted on decrypt");
        chkDeleteCrypt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDeleteCryptItemStateChanged(evt);
            }
        });

        chkNoCompress.setText("No Compression");
        chkNoCompress.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkNoCompressItemStateChanged(evt);
            }
        });

        btnGenerate.setText("Generate");
        btnGenerate.setEnabled(false);
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtKey1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtKey2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtKey3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtKey4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGenerate))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtOutputFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(chkDeleteOrig)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkDeleteCrypt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkNoCompress))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(101, 101, 101)
                                .addComponent(jLabel7))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDeleteOrig)
                    .addComponent(chkDeleteCrypt)
                    .addComponent(chkNoCompress))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtOutputFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtKey1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtKey2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtKey3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtKey4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnGenerate, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton3.setText("Ok");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout settingsFrameLayout = new javax.swing.GroupLayout(settingsFrame.getContentPane());
        settingsFrame.getContentPane().setLayout(settingsFrameLayout);
        settingsFrameLayout.setHorizontalGroup(
            settingsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsFrameLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(settingsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsFrameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addGap(109, 109, 109))
        );
        settingsFrameLayout.setVerticalGroup(
            settingsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(settingsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        enterKeyFrame.setTitle("Get Key");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Enter your encyryption key for this file:");

        keyFrameTxtKey1.setInputVerifier(verifier);

        keyFrameTxtKey2.setInputVerifier(verifier);

        keyFrameTxtKey3.setInputVerifier(verifier);

        keyFrameTxtKey4.setInputVerifier(verifier);

        keyFrameBtnOk.setText("Ok");

        keyFrameBtnCancel.setText("Cancel");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Or enter key phrase:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane7.setViewportView(jTextArea1);

        javax.swing.GroupLayout enterKeyFrameLayout = new javax.swing.GroupLayout(enterKeyFrame.getContentPane());
        enterKeyFrame.getContentPane().setLayout(enterKeyFrameLayout);
        enterKeyFrameLayout.setHorizontalGroup(
            enterKeyFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enterKeyFrameLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(enterKeyFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(enterKeyFrameLayout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(keyFrameBtnOk)
                        .addGap(18, 18, 18)
                        .addComponent(keyFrameBtnCancel))
                    .addComponent(jLabel10)
                    .addGroup(enterKeyFrameLayout.createSequentialGroup()
                        .addComponent(keyFrameTxtKey1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(keyFrameTxtKey2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(keyFrameTxtKey3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(keyFrameTxtKey4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        enterKeyFrameLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {keyFrameBtnCancel, keyFrameBtnOk});

        enterKeyFrameLayout.setVerticalGroup(
            enterKeyFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enterKeyFrameLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(enterKeyFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyFrameTxtKey1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keyFrameTxtKey2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keyFrameTxtKey3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keyFrameTxtKey4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(enterKeyFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyFrameBtnOk)
                    .addComponent(keyFrameBtnCancel))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("XcryptOR");

        jLabel1.setText("File:");

        btnEncrypt.setText("Encrypt");
        btnEncrypt.setEnabled(false);
        btnEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncryptActionPerformed(evt);
            }
        });

        btnDecrypt.setText("Decrypt");
        btnDecrypt.setEnabled(false);
        btnDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecryptActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(textarea);

        jTabbedPane1.addTab("Input file", jScrollPane1);

        textarea2.setColumns(20);
        textarea2.setRows(5);
        jScrollPane3.setViewportView(textarea2);

        jTabbedPane1.addTab("bytes", jScrollPane3);

        textarea3.setColumns(20);
        textarea3.setRows(5);
        jScrollPane2.setViewportView(textarea3);

        jTabbedPane1.addTab("Comp", jScrollPane2);

        textarea4.setColumns(20);
        textarea4.setRows(5);
        jScrollPane5.setViewportView(textarea4);

        jTabbedPane1.addTab("encrypt", jScrollPane5);

        console.setColumns(20);
        console.setRows(5);
        jScrollPane4.setViewportView(console);

        open.setText("File");

        Open.setText("Open");
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        open.add(Open);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        open.add(Exit);

        jMenuBar1.add(open);

        edit.setText("Edit");

        menuSet.setText("Settings");
        menuSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSetActionPerformed(evt);
            }
        });
        edit.add(menuSet);

        jMenuBar1.add(edit);

        about.setText("About");

        jMenuItem2.setText("About");
        about.add(jMenuItem2);

        jMenuItem3.setText("Help");
        about.add(jMenuItem3);

        jMenuBar1.add(about);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEncrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDecrypt)
                .addGap(66, 66, 66))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(labelFile)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(229, 229, 229)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(labelFile))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(12, 12, 12)))
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEncrypt)
                    .addComponent(btnDecrypt))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void initSettingsPane()
    {
        init = true;
        txtOutputFileName.setText(settings.getOutFileName());
        toConsole(flag.toString());
        toConsole(settings.toString());
        if (flag.get(BitFlag.Flags._32BIT))
        {
            btn32bit.setSelected(true);
            //flag.toggle(BitFlag.Flags._32BIT);
        }
        else
        {
            if (flag.get(BitFlag.Flags._64BIT))
            {
                btn64bit.setSelected(true);
               // flag.toggle(BitFlag.Flags._64BIT);
            }
            else
            {
                if (flag.get(BitFlag.Flags._128BIT))
                {
                    btn128bit.setSelected(true);
                }
            }
        }
        if (flag.get(BitFlag.Flags.KEY_PHRASE))
        {
            btnKeyPhrase.setSelected(true);
        }
        else
        {
            if (flag.get(BitFlag.Flags.KEY_RAND))
            {
                btnKeyRandom.setSelected(true);
            }
            else
            {
                if (settings.getKeyEnter())
                {
                    btnKeyEnter.setSelected(true);
                }
            }
        }
        if (flag.get(BitFlag.Flags.SAVE_RAND))
        {
            btnNameRand.setSelected(true);
        }
        else
        {
            if (settings.getSaveOrig())
            {
                btnNameOrig.setSelected(true);
            }
            else
            {
                if (settings.getSaveEnter())
                {
                    btnNameEnter.setSelected(true);
                }
            }
        }
        if (flag.get(BitFlag.Flags.NO_COMPRESS))
        {
            chkNoCompress.setSelected(true);
        }
        if (flag.get(BitFlag.Flags.DELETE_CRYPT))
        {
            chkDeleteCrypt.setSelected(true);
        }
        if (settings.getDeleteOrig())
        {
            chkDeleteOrig.setSelected(true);
        }
        init = false;
    }
    private void clearKeyTextFields()
    {
        txtKey1.setText("");
        txtKey2.setText("");
        txtKey3.setText("");
        txtKey4.setText("");
    }
    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) 
        {
            file = fileChooser.getSelectedFile();
            try 
            {
                // load file into first tab
                textarea.read( new FileReader( file.getAbsolutePath() ), null );
                boolean isEncrypted = controller.initFile(file);
                labelFile.setText(file.getPath());
                textarea2.setText("");
                textarea3.setText("");
                textarea4.setText("");
                showBytes(controller.getFileBank(), textarea2);
                if (isEncrypted)
                {
                    toConsole("File is encrypted...");
                    btnDecrypt.setEnabled(true);
                    btnEncrypt.setEnabled(false);
                }
                else
                {
                    toConsole("File is not encrypted by XcryptOR");
                    btnEncrypt.setEnabled(true);
                    btnDecrypt.setEnabled(false);
                    controller.setOutFileName(txtOutputFileName.getText());
                    byte[] headerFile = controller.addHeaders(flag.getFlags(), file.length());
                    if (!flag.get(BitFlag.Flags.NO_COMPRESS))
                    {
                       controller.compressFile(headerFile);
                       showBytes(controller.getCompressBank(), textarea3);
                    }
                    else
                    {
                        controller.setCompressBank(headerFile);
                    }
                    toConsole("KEY:" + controller.keyToString());
                }                 
                
                
                

            } 
            catch (IOException ex) 
            {
                System.out.println("problem accessing file"+file.getAbsolutePath());
            }
        } 
        else 
        {
            toConsole("File access cancelled by user.");
        }
    }//GEN-LAST:event_OpenActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);        
    }//GEN-LAST:event_ExitActionPerformed

    private void menuSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSetActionPerformed
        settingsFrame.setVisible(true);
    }//GEN-LAST:event_menuSetActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        settingsFrame.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btn32bitStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_btn32bitStateChanged
        
       //if (btn32bit.selected())
        
    }//GEN-LAST:event_btn32bitStateChanged

    private void btn32bitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btn32bitItemStateChanged
        if (!init)
        {
            flag.toggle(BitFlag.Flags._32BIT);
            toConsole(flag.toString());
        }
        if (flag.get(BitFlag.Flags._32BIT))
        {
            controller.setBits(32);
        }
        if (settings.getKeyEnter())
        {
            setKeyTextFieldsForEntry();
        }
    }//GEN-LAST:event_btn32bitItemStateChanged

    private void btn64bitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btn64bitItemStateChanged
        if (!init)
        {
            flag.toggle(BitFlag.Flags._64BIT);
            toConsole(flag.toString());
        }
        if (flag.get(BitFlag.Flags._64BIT))
        {
            controller.setBits(64);
        }
        if (settings.getKeyEnter())
        {
            setKeyTextFieldsForEntry();
        }
        
    }//GEN-LAST:event_btn64bitItemStateChanged

    private void btn128bitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btn128bitItemStateChanged
        if (!init)
        {
            flag.toggle(BitFlag.Flags._128BIT);
            toConsole(flag.toString());
        }
        if (flag.get(BitFlag.Flags._128BIT))
        {
            controller.setBits(128);
        }
        if (settings.getKeyEnter())
        {
            setKeyTextFieldsForEntry();
        }
        
    }//GEN-LAST:event_btn128bitItemStateChanged

    private void btnKeyPhraseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnKeyPhraseItemStateChanged
         if (!init)
         {
            flag.toggle(BitFlag.Flags.KEY_PHRASE);
            toConsole(flag.toString());
         }
        if (flag.get(BitFlag.Flags.KEY_PHRASE))
        {
            txtPhrase.setEnabled(true);
            txtPhrase.requestFocusInWindow();
            btnGenerate.setEnabled(true);

        }
        else
        {
            txtPhrase.setEnabled(false);
            btnGenerate.setEnabled(false);
        }
    }//GEN-LAST:event_btnKeyPhraseItemStateChanged

    private void btnKeyRandomItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnKeyRandomItemStateChanged
        if (!init)
        {
            flag.toggle(BitFlag.Flags.KEY_RAND);
            toConsole(flag.toString());
        }
        if (flag.get(BitFlag.Flags.KEY_RAND))
        {
            btnGenerate.setEnabled(true);
        }
        else
        {
            btnGenerate.setEnabled(false);
        }
    }//GEN-LAST:event_btnKeyRandomItemStateChanged

    private void chkNoCompressItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkNoCompressItemStateChanged
        if (!init)
        {
            flag.toggle(BitFlag.Flags.NO_COMPRESS);
            toConsole(flag.toString());
        }
    }//GEN-LAST:event_chkNoCompressItemStateChanged

    private void chkDeleteCryptItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDeleteCryptItemStateChanged
        if (!init)
        {
            flag.toggle(BitFlag.Flags.DELETE_CRYPT);
            toConsole(flag.toString());
        }
    }//GEN-LAST:event_chkDeleteCryptItemStateChanged

    private void chkDeleteOrigItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDeleteOrigItemStateChanged
        if (!init)
        {
            settings.toggleDeleteOrig();
            toConsole("Delete Orig = " + settings.getDeleteOrig());
        }
    }//GEN-LAST:event_chkDeleteOrigItemStateChanged

    private void btnNameRandItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnNameRandItemStateChanged
        if (!init)
        {
            flag.toggle(BitFlag.Flags.SAVE_RAND);
            if (flag.get(BitFlag.Flags.SAVE_RAND))
            {
                txtOutputFileName.setText(ZipFunctions.getFileNameTime() + ".dat");
            }
        }
    }//GEN-LAST:event_btnNameRandItemStateChanged

    private void setKeyTextFieldsForEntry()
    {
         if (settings.getKeyEnter())
        {
            clearKeyTextFields();
            switch (controller.getBits())
            {
                case 32:
                    txtKey1.setEditable(true);
                    txtKey2.setEditable(false);
                    txtKey3.setEditable(false);
                    txtKey4.setEditable(false);
                    break;
                case 64:
                    txtKey1.setEditable(true);
                    txtKey2.setEditable(true);
                    txtKey3.setEditable(false);
                    txtKey4.setEditable(false);

                    break;
                case 128:
                    txtKey1.setEditable(true);
                    txtKey2.setEditable(true);
                    txtKey3.setEditable(true);
                    txtKey4.setEditable(true);
                    break;
            }  

        }
        else
        {
            txtKey1.setEditable(false);
            txtKey2.setEditable(false);
            txtKey3.setEditable(false);
            txtKey4.setEditable(false);
        }
       
    }
    private void btnKeyEnterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnKeyEnterItemStateChanged
        if (!init)
        {
            settings.toggleKeyEnter();
            toConsole("Key Enter =" + settings.getKeyEnter());
            if (settings.getKeyEnter())
            {
                clearKeyTextFields();
                setKeyTextFieldsForEntry();
                txtKey1.requestFocusInWindow();
            }
            else
            {
                txtKey1.setEditable(false);
                txtKey2.setEditable(false);
                txtKey3.setEditable(false);
                txtKey4.setEditable(false);
            }
        }
    }//GEN-LAST:event_btnKeyEnterItemStateChanged

    private void btnNameOrigItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnNameOrigItemStateChanged
        if (!init)
        {
            settings.toggleSaveOrig();
        }
        if (settings.getSaveOrig())
        {
            txtOutputFileName.setText("[filename]" + ".crp");
        }
    }//GEN-LAST:event_btnNameOrigItemStateChanged

    private void btnNameEnterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnNameEnterItemStateChanged
        if (!init)
        {
            settings.toggleSaveEnter();
        }
        if (settings.getSaveEnter())
        {
            txtOutputFileName.setEditable(true);
            txtOutputFileName.setText("");
            txtOutputFileName.requestFocusInWindow();
        }
        else
        {
            txtOutputFileName.setEditable(false);
        }
    }//GEN-LAST:event_btnNameEnterItemStateChanged

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        if (flag.get(BitFlag.Flags.KEY_RAND))
        {
            controller.getRandomKey();
        }
        if (flag.get(BitFlag.Flags.KEY_PHRASE))
        {
            controller.setHashKey(txtPhrase.getText());           
        }
        if (settings.getKeyEnter())
        {
            switch (controller.getBits())
            {
                case 32:
                    controller.setKey(Long.parseLong(txtKey1.getText(),16), 0);
                    break;
                case 64:
                    controller.setKey(Long.parseLong(txtKey1.getText(),16), 0);
                    controller.setKey(Long.parseLong(txtKey2.getText(),16), 1);
                    break;
                case 128:
                    controller.setKey(Long.parseLong(txtKey1.getText(),16), 0);
                    controller.setKey(Long.parseLong(txtKey2.getText(),16), 1);
                    controller.setKey(Long.parseLong(txtKey3.getText(),16), 2);
                    controller.setKey(Long.parseLong(txtKey4.getText(),16), 3);
                    break;                   
            }
            btnGenerate.setEnabled(false);
        }
        this.clearKeyTextFields();
        switch (controller.getBits())
        {
            case 32:
                txtKey1.setText(Encryptor.toHexString(controller.getKey(0), 8));
                break;
            case 64:
                txtKey1.setText(Encryptor.toHexString(controller.getKey(0), 8));
                txtKey2.setText(Encryptor.toHexString(controller.getKey(1), 8));
                break;
            case 128:
                txtKey1.setText(Encryptor.toHexString(controller.getKey(0), 8));
                txtKey2.setText(Encryptor.toHexString(controller.getKey(1), 8));
                txtKey3.setText(Encryptor.toHexString(controller.getKey(2), 8));
                txtKey4.setText(Encryptor.toHexString(controller.getKey(3), 8));
        }
        
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        settings.setFlags(flag.getFlags());
        settings.setOutFileName(txtOutputFileName.getText());
        ZipFunctions.saveSettings(settings);
        settingsFrame.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncryptActionPerformed
        if (controller.getKey(0)==0)
        {
            toConsole("You must generate or enter an encryption key.");
        }
        else
        { 
          controller.encrypt();
          showBytes(controller.getEncryptBank(), textarea4);
          
          controller.saveFile(file);
          //ZipFunctions.bufferToFile(encryptBank.getBank(), file, txtOutputFileName.getText());            
        }
    }//GEN-LAST:event_btnEncryptActionPerformed

    private void txtKey1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKey1FocusLost
        if (controller.getBits()==32)
        {
            btnGenerate.setEnabled(true);
        }
    }//GEN-LAST:event_txtKey1FocusLost

    private void txtKey2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKey2FocusLost
        if (controller.getBits()==64)
        {
            btnGenerate.setEnabled(true);
        }
    }//GEN-LAST:event_txtKey2FocusLost

    private void txtKey4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKey4FocusLost
        if (controller.getBits()==128)
        {
            btnGenerate.setEnabled(true);
        }
    }//GEN-LAST:event_txtKey4FocusLost

    private void btnDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecryptActionPerformed
        flag = controller.readFlags();
        initSettingsPane();
        //enterKeyFrame.setVisible(true);
        if (flag.get(BitFlag.Flags.NO_COMPRESS))
        {
            
        }
        else
        {
            
        }
    }//GEN-LAST:event_btnDecryptActionPerformed

    public static void toConsole(String str)
    {
        str += "\n";
        console.append(str);
    }
    private void showBytes(byte[] b, JTextArea j)
    {
        for (int i = 0; i < b.length; i++)
        {
            if (i%32 == 0)
            {
                j.append("\n" + Encryptor.toHexString(i,6) + ":");
            }
            j.append(Encryptor.toHexString(b[i], 2) + " ");
        }
    }
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileEncryptGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileEncryptGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileEncryptGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileEncryptGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileEncryptGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem Open;
    private javax.swing.JMenu about;
    private javax.swing.JRadioButton btn128bit;
    private javax.swing.JRadioButton btn32bit;
    private javax.swing.JRadioButton btn64bit;
    private javax.swing.JButton btnDecrypt;
    private javax.swing.JButton btnEncrypt;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JRadioButton btnKeyEnter;
    private javax.swing.JRadioButton btnKeyPhrase;
    private javax.swing.JRadioButton btnKeyRandom;
    private javax.swing.JRadioButton btnNameEnter;
    private javax.swing.JRadioButton btnNameOrig;
    private javax.swing.JRadioButton btnNameRand;
    private javax.swing.JCheckBox chkDeleteCrypt;
    private javax.swing.JCheckBox chkDeleteOrig;
    private javax.swing.JCheckBox chkNoCompress;
    private static javax.swing.JTextArea console;
    private javax.swing.JMenu edit;
    private javax.swing.JFrame enterKeyFrame;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton keyFrameBtnCancel;
    private javax.swing.JButton keyFrameBtnOk;
    private javax.swing.JTextField keyFrameTxtKey1;
    private javax.swing.JTextField keyFrameTxtKey2;
    private javax.swing.JTextField keyFrameTxtKey3;
    private javax.swing.JTextField keyFrameTxtKey4;
    private javax.swing.ButtonGroup keyTypeGroup;
    private javax.swing.ButtonGroup keybitgroup;
    private javax.swing.JLabel labelFile;
    private javax.swing.JMenuItem menuSet;
    private javax.swing.JMenu open;
    private javax.swing.ButtonGroup saveFileGroup;
    private javax.swing.JFrame settingsFrame;
    private javax.swing.JEditorPane textarea;
    private javax.swing.JTextArea textarea2;
    private javax.swing.JTextArea textarea3;
    private javax.swing.JTextArea textarea4;
    private javax.swing.JTextField txtKey1;
    private javax.swing.JTextField txtKey2;
    private javax.swing.JTextField txtKey3;
    private javax.swing.JTextField txtKey4;
    private javax.swing.JTextField txtOutputFileName;
    private javax.swing.JTextArea txtPhrase;
    // End of variables declaration//GEN-END:variables
}
